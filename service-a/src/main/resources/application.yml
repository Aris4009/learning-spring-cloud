management:
  endpoints:
    web:
      exposure:
        include: '*'
      cors:
        allowed-origins: '*'
        allowed-methods: '*'
        allowed-headers: '*'
  endpoint:
    health:
      show-components: always
      show-details: always

server:
  port: 8001
  error:
    path: /error
spring:
  application:
    name: service-a
  main:
    banner-mode: 'off'
    log-startup-info: true
  redis:
    enable: true
    type: 0
    schema: redis
    database: 0
    host: 127.0.0.1
    port: 6379
  session:
    store-type: redis
    timeout: 30m
  rabbitmq:
    enable: false
    host: 127.0.0.1
    port: 5672
  datasource:
    enable: true
    url: jdbc:mysql://127.0.0.1:3306/security?useSSL=false
    username: root
    password:
    beetlsql:
      worker.id: 1
      data.center.id: 1
  cloud:
    loadbalancer:
      cache:
        ttl: 300

feign:
  client:
    config:
      default:
        loggerLevel: basic
        requestInterceptors:
          - com.example.remote.config.MyRequestInterceptor
  circuitbreaker:
    enabled: true
  compression:
    request:
      enabled: true
    response:
      enabled: true
      useGzipDecoder: true
  okhttp:
    enabled: true

request:
  pre: true
  after: true
  error: true

remote-url:
  internal:
    #file/server
    type: server
    serverAddr: http://test.nacos.com:80
    namespace: learning-spring-cloud-dev
    dataId: service-a-remote-url.json
    group: DEFAULT_GROUP
    path:



management:
  endpoints:
    web:
      exposure:
        include: '*'
      cors:
        allowed-origins: '*'
        allowed-methods: '*'
        allowed-headers: '*'
  endpoint:
    health:
      show-components: always
      show-details: always
nacos:
  config:
    server-addr: test.nacos.com
  discovery:
    server-addr: test.nacos.com
server:
  error:
    whitelabel:
      enabled: false
  port: 8000
spring:
  application:
    name: gateway
  cloud:
    gateway:
      security:
        enable: true
        verify-url: http://localhost:8003/api/verify/token
        refresh-url: http://localhost:8003/api/refresh/token
        login-url: http://localhost:8003/api/login
        logout-url: http://localhost:8003/api/logout
        white-url-list-path: white-url-list.json
      enabled: true
      default-filters:
        - StripPrefix=1
        - SaveSession
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
        - SecureHeaders
      x-forwarded:
        enabled: true
      globalcors:
        add-to-simple-url-handler-mapping: true
      httpclient:
        compression: true
      routes:
        - id: authentication
          uri: http://localhost:8003
          predicates:
            - Path=/authentication/api/**
            - Method=GET,POST

        - id: service-a
          uri: http://localhost:8001
          predicates:
            - Path=/service-a/api/**
            - Method=GET,POST
          filters:
            - name: CircuitBreaker
              args:
                name: service-a-circuit-breaker
                fallbackUri: forward:/api/circuit/breaker/fallback

        - id: service-a-websocket
          uri: ws://localhost:8001
          predicates:
            - Path=/service-a/websocket/**

        - id: service-b-slow
          uri: http://localhost:8002
          predicates:
            - Path=/service-b/api/v1/test/slow
            - Method=GET,POST
          filters:
            - name: CircuitBreaker
              args:
                name: service-b-circuit-breaker
                fallbackUri: forward:/api/circuit/breaker/fallback

        - id: service-b-retry
          uri: http://localhost:8002
          predicates:
            - Path=/service-b/api/v1/test/retry
            - Method=GET,POST
          filters:
            - name: Retry
              args:
                retries: 2
                statuses: BAD_GATEWAY
                methods: GET,POST
                backoff:
                  firstBackoff: 3000ms
                  maxBackoff: 5000ms
                  factor: 2
                  basedOnPreviousValue: false

        - id: service-b-rate-limiter
          uri: http://localhost:8002
          predicates:
            - Path=/service-b/api/v1/test/rate/limiter
            - Method=GET,POST
          filters:
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@sessionKeyResolver}"
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 60
                redis-rate-limiter.requestedTokens: 60
  main:
    banner-mode: 'off'
  redis:
    enable: true
    type: 0
    schema: redis
    host: 127.0.0.1
    port: 6379
    database: 0
    cluster:
      nodes: >-
        10.0.4.110:6371,10.0.4.110:6372,10.0.4.110:6373,10.0.4.111:6371,10.0.4.111:6372,10.0.4.111:6373

#https://blog.csdn.net/weixin_38405253/article/details/108891772
#https://github.com/lmhmhl/Resilience4j-Guides-Chinese/blob/main/core-modules/CircuitBreaker.md
resilience4j:
  #断路器配置
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        #调用失败率阈值，超过此值将会开启断路器
        failureRateThreshold: 50
        #慢调用率阈值，超过此值将会开启断路器
        slowCallRateThreshold: 100
        #调用时间阈值，超过此值视为慢调用
        slowCallDurationThreshold: 5000
        #断路器在半开状态下允许通过的调用次数
        permittedNumberOfCallsInHalfOpenState: 1
        #断路器在半开状态下的最长等待时间，超过此值，会从半开状态恢复为开启状态，0表示一直处于半开状态
        maxWaitDurationInHalfOpenState: 10000
        #滑动窗口类型
        slidingWindowType: TIME_BASED
        #滑动窗口大小
        slidingWindowSize: 5
        #窗口周期
        minimumNumberOfCalls: 2
        #断路器从开启到半开等待的时间
        waitDurationInOpenState: 10000
        automaticTransitionFromOpenToHalfOpenEnabled: true
        #记录异常
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
    instances:
      service-a-circuit-breaker:
        baseConfig: default
      service-b-circuit-breaker:
        baseConfig: default

    #重试机制,spring-cloud-gateway不支持该重试机制，可使用spring-cloud-gateway重试机制
  #    retry:
  #      configs:
  #        default:
  #          registerHealthIndicator: true
  #          maxRetryAttempts: 3
  #          waitDuration: 5000
  #          retryExceptions:
  #            - org.springframework.web.client.HttpServerErrorException
  #            - java.io.IOException
  #      instances:
  #        service-a-retry:
  #          baseConfig: default
  #限流器，spring-cloud-gateway不支持，使用spring-cloud-gateway限流器
#  ratelimiter:
#    configs:
#      default:
#        registerHealthIndicator: true
#        #在一次刷新周期内，允许执行的最大请求数
#        limitForPeriod: 1
#        #限流器每个多长时间刷新一次
#        limitRefreshPeriod: 5000
#        #线程等待的默认等待时间
#        timeoutDuration: 10
#    instances:
#      service-a-rate-limiter:
#        baseConfig: default







